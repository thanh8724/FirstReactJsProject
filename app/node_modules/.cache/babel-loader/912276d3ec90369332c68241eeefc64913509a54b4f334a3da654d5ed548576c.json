{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n/** create the thunk */\nexport const fetchAccounts = createAsyncThunk(\"cart/fetchAccounts\", async () => {\n  const response = await axios.get(`http://localhost:3080/accounts`);\n  return response.data;\n});\nconst initialState = {\n  accounts: [],\n  loading: false,\n  isError: false\n};\nconst accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState,\n  reducers: {\n    hidden: () => {}\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAccounts.pending, (state, action) => {\n      state.loading = true;\n      state.isError = false;\n    });\n    builder.addCase(fetchAccounts.fulfilled, (state, action) => {\n      state.accounts = action.payload;\n      state.loading = false;\n      state.isError = false;\n    });\n    builder.addCase(fetchAccounts.rejected, (state, action) => {\n      state.loading = false;\n      state.isError = true;\n    });\n    /** */\n  }\n});\nexport const {\n  hidden\n} = accountsSlice.actions;\nexport default accountsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchAccounts","response","get","data","initialState","accounts","loading","isError","accountsSlice","name","reducers","hidden","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","actions","reducer"],"sources":["D:/ReactJs/app/src/redux/slices/accountsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n/** create the thunk */\r\nexport const fetchAccounts = createAsyncThunk(\r\n  \"cart/fetchAccounts\",\r\n  async () => {\r\n    const response = await axios.get(`http://localhost:3080/accounts`);\r\n    return response.data;\r\n  }\r\n);\r\nconst initialState = {\r\n  accounts: [],\r\n  loading: false,\r\n  isError: false,\r\n};\r\n\r\nconst accountsSlice = createSlice({\r\n  name: \"accounts\",\r\n  initialState,\r\n  reducers: { hidden: () => {} },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAccounts.pending, (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n    });\r\n    builder.addCase(fetchAccounts.fulfilled, (state, action) => {\r\n      state.accounts = action.payload;\r\n      state.loading = false;\r\n      state.isError = false;\r\n    });\r\n    builder.addCase(fetchAccounts.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n    });\r\n    /** */\r\n  },\r\n});\r\n\r\nexport const { hidden } = accountsSlice.actions;\r\nexport default accountsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,oBAAoB,EACpB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AACD,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,aAAa,GAAGX,WAAW,CAAC;EAChCY,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IAAEC,MAAM,EAAEA,CAAA,KAAM,CAAC;EAAE,CAAC;EAC9BC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACd,aAAa,CAACe,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACV,OAAO,GAAG,IAAI;MACpBU,KAAK,CAACT,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;IACFM,OAAO,CAACC,OAAO,CAACd,aAAa,CAACkB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC1DD,KAAK,CAACX,QAAQ,GAAGY,MAAM,CAACE,OAAO;MAC/BH,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;IACFM,OAAO,CAACC,OAAO,CAACd,aAAa,CAACoB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAO,CAAC,GAAGH,aAAa,CAACa,OAAO;AAC/C,eAAeb,aAAa,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}