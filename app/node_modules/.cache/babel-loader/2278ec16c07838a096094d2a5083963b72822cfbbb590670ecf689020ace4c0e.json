{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\app\\\\src\\\\components\\\\ReduxFormComponents\\\\CreateCategoryForm.js\";\nimport React, { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createCategory } from \"../../redux/slices/categoriesSlice\";\nimport { reduxForm, Field, initialize } from \"redux-form\";\nimport \"./Style.css\";\nimport InputReduxFormComponent from \"../ReduxFormInputComponents/InputReduxFormComponent\";\nimport TexteraReduxComponent from \"../ReduxFormInputComponents/TexteraReduxComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet CreateCategoryForm = ({\n  categories,\n  setIsShowPopupAdd,\n  handleSubmit,\n  initialize\n}) => {\n  // const dispatch = useDispatch();\n  // const listNameCategories =\n  //   categories?.map((category) => category.nameCategory) || [];\n\n  // useEffect(() => {\n  //   if (categories.length > 0) {\n  //     const initialFormData = {\n  //       nameCategory: categories[0]?.nameCategory || \"\",\n  //       descriptionCategory: categories[0]?.descriptionCategory || \"\",\n  //     };\n  //     dispatch(initialize(\"CreateCategoryForm\", initialFormData));\n  //   }\n  // }, [categories, dispatch, initialize]);\n\n  const onSubmit = formValues => {\n    console.log(formValues);\n    // dispatch(createCategory(formValues));\n  };\n  const resetForm = e => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n// CreateCategoryForm = reduxForm({\n//   form: \"CreateCategoryForm\",\n// })(CreateCategoryForm);\n_c = CreateCategoryForm;\nexport default CreateCategoryForm;\nvar _c;\n$RefreshReg$(_c, \"CreateCategoryForm\");","map":{"version":3,"names":["React","useMemo","useDispatch","createCategory","reduxForm","Field","initialize","InputReduxFormComponent","TexteraReduxComponent","jsxDEV","_jsxDEV","CreateCategoryForm","categories","setIsShowPopupAdd","handleSubmit","onSubmit","formValues","console","log","resetForm","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReactJs/app/src/components/ReduxFormComponents/CreateCategoryForm.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createCategory } from \"../../redux/slices/categoriesSlice\";\r\nimport { reduxForm, Field, initialize } from \"redux-form\";\r\nimport \"./Style.css\";\r\nimport InputReduxFormComponent from \"../ReduxFormInputComponents/InputReduxFormComponent\";\r\nimport TexteraReduxComponent from \"../ReduxFormInputComponents/TexteraReduxComponent\";\r\n\r\nlet CreateCategoryForm = ({\r\n  categories,\r\n  setIsShowPopupAdd,\r\n  handleSubmit,\r\n  initialize,\r\n}) => {\r\n  // const dispatch = useDispatch();\r\n  // const listNameCategories =\r\n  //   categories?.map((category) => category.nameCategory) || [];\r\n\r\n  // useEffect(() => {\r\n  //   if (categories.length > 0) {\r\n  //     const initialFormData = {\r\n  //       nameCategory: categories[0]?.nameCategory || \"\",\r\n  //       descriptionCategory: categories[0]?.descriptionCategory || \"\",\r\n  //     };\r\n  //     dispatch(initialize(\"CreateCategoryForm\", initialFormData));\r\n  //   }\r\n  // }, [categories, dispatch, initialize]);\r\n\r\n  const onSubmit = (formValues) => {\r\n    console.log(formValues);\r\n    // dispatch(createCategory(formValues));\r\n  };\r\n\r\n  const resetForm = (e) => {};\r\n\r\n  return <div></div>;\r\n};\r\n\r\n// CreateCategoryForm = reduxForm({\r\n//   form: \"CreateCategoryForm\",\r\n// })(CreateCategoryForm);\r\n\r\nexport default CreateCategoryForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,SAAS,EAAEC,KAAK,EAAEC,UAAU,QAAQ,YAAY;AACzD,OAAO,aAAa;AACpB,OAAOC,uBAAuB,MAAM,qDAAqD;AACzF,OAAOC,qBAAqB,MAAM,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,IAAIC,kBAAkB,GAAGA,CAAC;EACxBC,UAAU;EACVC,iBAAiB;EACjBC,YAAY;EACZR;AACF,CAAC,KAAK;EACJ;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMS,QAAQ,GAAIC,UAAU,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB;EACF,CAAC;EAED,MAAMG,SAAS,GAAIC,CAAC,IAAK,CAAC,CAAC;EAE3B,oBAAOV,OAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB,CAAC;;AAED;AACA;AACA;AAAAC,EAAA,GAhCId,kBAAkB;AAkCtB,eAAeA,kBAAkB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}