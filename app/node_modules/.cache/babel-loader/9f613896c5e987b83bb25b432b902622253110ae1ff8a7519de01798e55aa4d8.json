{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API = \"http://localhost:3080\";\n/** create the thunk */\nexport const fetchBills = createAsyncThunk(\"biils/fetchBills\", async () => {\n  const response = await axios.get(`${API}/bills`);\n  return response.data;\n});\nexport const updateBill = createAsyncThunk(\"biils/updateBill\", async data => {\n  await axios.patch(`${API}/updateBill`, data);\n  const response = await axios.get(`${API}/bills`);\n  return response.data;\n});\nexport const createBill = createAsyncThunk(\"bills/createBill\", async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"nameProduct\", data.nameProduct);\n    formData.append(\"priceProduct\", data.priceProduct);\n    formData.append(\"descriptionProduct\", data.descriptionProduct);\n    formData.append(\"category\", data.category);\n    formData.append(\"imageProduct\", data.imageProduct[0]);\n    for (let i = 0; i < data.imageDetailProduct.length; i++) {\n      formData.append(\"imageDetailProduct\", data.imageDetailProduct[i]);\n    }\n    await axios.post(`${API}/createProduct`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    const response = await axios.get(`${API}/products`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  bills: [],\n  loading: false,\n  isError: false\n};\nconst productsSlice = createSlice({\n  name: \"bills\",\n  initialState,\n  reducers: {\n    hidden: () => {}\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchBills.pending, (state, action) => {\n      state.loading = true;\n      state.isError = false;\n    });\n    builder.addCase(fetchBills.fulfilled, (state, action) => {\n      state.bills = action.payload;\n      state.loading = false;\n      state.isError = false;\n    });\n    builder.addCase(fetchBills.rejected, (state, action) => {\n      state.loading = false;\n      state.isError = true;\n    });\n    // update\n    builder.addCase(updateBill.fulfilled, (state, action) => {\n      state.bills = action.payload;\n      state.loading = false;\n      state.isError = false;\n    });\n  }\n});\nexport const {\n  hidden\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API","fetchBills","response","get","data","updateBill","patch","createBill","rejectWithValue","formData","FormData","append","nameProduct","priceProduct","descriptionProduct","category","imageProduct","i","imageDetailProduct","length","post","headers","error","initialState","bills","loading","isError","productsSlice","name","reducers","hidden","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","actions","reducer"],"sources":["D:/ReactJs/app/src/redux/slices/billSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst API = \"http://localhost:3080\";\r\n/** create the thunk */\r\nexport const fetchBills = createAsyncThunk(\"biils/fetchBills\", async () => {\r\n  const response = await axios.get(`${API}/bills`);\r\n  return response.data;\r\n});\r\nexport const updateBill = createAsyncThunk(\"biils/updateBill\", async (data) => {\r\n  await axios.patch(`${API}/updateBill`, data);\r\n  const response = await axios.get(`${API}/bills`);\r\n  return response.data;\r\n});\r\nexport const createBill = createAsyncThunk(\r\n  \"bills/createBill\",\r\n  async (data, { rejectWithValue }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"nameProduct\", data.nameProduct);\r\n      formData.append(\"priceProduct\", data.priceProduct);\r\n      formData.append(\"descriptionProduct\", data.descriptionProduct);\r\n      formData.append(\"category\", data.category);\r\n      formData.append(\"imageProduct\", data.imageProduct[0]);\r\n      for (let i = 0; i < data.imageDetailProduct.length; i++) {\r\n        formData.append(\"imageDetailProduct\", data.imageDetailProduct[i]);\r\n      }\r\n      await axios.post(`${API}/createProduct`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      const response = await axios.get(`${API}/products`);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\nconst initialState = {\r\n  bills: [],\r\n  loading: false,\r\n  isError: false,\r\n};\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"bills\",\r\n  initialState,\r\n  reducers: {\r\n    hidden: () => {},\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchBills.pending, (state, action) => {\r\n      state.loading = true;\r\n      state.isError = false;\r\n    });\r\n    builder.addCase(fetchBills.fulfilled, (state, action) => {\r\n      state.bills = action.payload;\r\n      state.loading = false;\r\n      state.isError = false;\r\n    });\r\n    builder.addCase(fetchBills.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.isError = true;\r\n    });\r\n    // update\r\n    builder.addCase(updateBill.fulfilled, (state, action) => {\r\n      state.bills = action.payload;\r\n      state.loading = false;\r\n      state.isError = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { hidden } = productsSlice.actions;\r\nexport default productsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}