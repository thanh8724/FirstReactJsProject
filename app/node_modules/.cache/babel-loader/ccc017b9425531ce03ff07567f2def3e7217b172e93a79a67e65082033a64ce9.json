{"ast":null,"code":"import { createSlice, createAsyncThunk, Tuple } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n/** create the thunk */\nexport const fectchCarByIdUser = createAsyncThunk(\"cart/fectchCarByIdUser\", async (idUser, thunkAPI) => {\n  const response = await axios.get(`http://localhost:3080/cart/${idUser}`);\n  return response.data;\n});\nconst initialState = {\n  listProducts: [],\n  loading: false,\n  isError: false\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.items.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fectchCarByIdUser.pending, (state, action) => {\n      loading: true, is;\n    });\n    builder.addCase(fectchCarByIdUser.fulfilled, (state, action) => {\n      state.entities.push(action.payload);\n    });\n    builder.addCase(fectchCarByIdUser.rejected, (state, action) => {\n      state.entities.push(action.payload);\n    });\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Tuple","axios","fectchCarByIdUser","idUser","thunkAPI","response","get","data","initialState","listProducts","loading","isError","cartSlice","name","reducers","addToCart","state","action","items","push","payload","extraReducers","builder","addCase","pending","is","fulfilled","entities","rejected","actions","reducer"],"sources":["D:/ReactJs/app/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, Tuple } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n/** create the thunk */\r\nexport const fectchCarByIdUser = createAsyncThunk(\r\n  \"cart/fectchCarByIdUser\",\r\n  async (idUser, thunkAPI) => {\r\n    const response = await axios.get(`http://localhost:3080/cart/${idUser}`);\r\n    return response.data;\r\n  }\r\n);\r\nconst initialState = { listProducts: [], loading: false, isError: false };\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      state.items.push(action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fectchCarByIdUser.pending, (state, action) => {\r\n      loading: true,\r\n      is\r\n    });\r\n    builder.addCase(fectchCarByIdUser.fulfilled, (state, action) => {\r\n      state.entities.push(action.payload);\r\n    });\r\n    builder.addCase(fectchCarByIdUser.rejected, (state, action) => {\r\n      state.entities.push(action.payload);\r\n    });\r\n  },\r\n});\r\n\r\nexport const { addToCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,kBAAkB;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,MAAMC,iBAAiB,GAAGH,gBAAgB,CAC/C,wBAAwB,EACxB,OAAOI,MAAM,EAAEC,QAAQ,KAAK;EAC1B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,8BAA8BH,MAAM,EAAE,CAAC;EACxE,OAAOE,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AACD,MAAMC,YAAY,GAAG;EAAEC,YAAY,EAAE,EAAE;EAAEC,OAAO,EAAE,KAAK;EAAEC,OAAO,EAAE;AAAM,CAAC;AAEzE,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACE,KAAK,CAACC,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IAClC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACrB,iBAAiB,CAACsB,OAAO,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC5DP,OAAO,EAAE,IAAI,EACbe,EAAE;IACJ,CAAC,CAAC;IACFH,OAAO,CAACC,OAAO,CAACrB,iBAAiB,CAACwB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC9DD,KAAK,CAACW,QAAQ,CAACR,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACrC,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACrB,iBAAiB,CAAC0B,QAAQ,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAACW,QAAQ,CAACR,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACrC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL;AAAU,CAAC,GAAGH,SAAS,CAACiB,OAAO;AAC9C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}